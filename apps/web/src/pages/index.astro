---
import '../styles/global.css'
import Content from '../components/index.mdx'
---

<html lang='en'>
  <head>
    <meta charset='utf-8' />
    <link rel='icon' type='image/svg+xml' href='/favicon.svg' />
    <meta name='viewport' content='width=device-width' />
    <meta name='generator' content={Astro.generator} />
    <title>Pointers.js</title>
  </head>
  <body>
    <header
      class='mt-60 mb-24 flex w-full flex-col items-center justify-center'
    >
      <h1 class='text-4xl font-bold tracking-tight'>Pointers.js</h1>
      <p class='mt-1 tracking-tight text-neutral-600 dark:text-neutral-400'>
        Customizable and framework-agnostic cursor (&#x3c;1kB)
      </p>
      <div class='mt-4 flex items-center gap-x-2'>
        <a
          href='#installation'
          draggable='false'
          class='block rounded-lg bg-neutral-950 px-8 py-3 text-sm font-medium text-neutral-50 select-none hover:bg-neutral-900 active:bg-neutral-800 dark:bg-neutral-50 dark:text-neutral-950 dark:hover:bg-neutral-50/90 dark:active:bg-neutral-50/75'
          >Get Started</a
        >
        <a
          href='https://github.com/haaarshsingh/cursor.js'
          target='_blank'
          rel='noreferrer'
          draggable='false'
          class='flex items-center gap-x-1 rounded-lg bg-neutral-200 px-8 py-3 text-sm text-neutral-950 select-none hover:bg-neutral-300/50 active:bg-neutral-300/75 dark:bg-neutral-800 dark:text-neutral-50 dark:hover:bg-neutral-700/75 dark:active:bg-neutral-700/50'
        >
          <svg
            stroke='currentColor'
            fill='currentColor'
            stroke-width='0'
            viewBox='0 0 1024 1024'
            height='1.25em'
            width='1.25em'
            xmlns='http://www.w3.org/2000/svg'
            ><path
              d='M511.6 76.3C264.3 76.2 64 276.4 64 523.5 64 718.9 189.3 885 363.8 946c23.5 5.9 19.9-10.8 19.9-22.2v-77.5c-135.7 15.9-141.2-73.9-150.3-88.9C215 726 171.5 718 184.5 703c30.9-15.9 62.4 4 98.9 57.9 26.4 39.1 77.9 32.5 104 26 5.7-23.5 17.9-44.5 34.7-60.8-140.6-25.2-199.2-111-199.2-213 0-49.5 16.3-95 48.3-131.7-20.4-60.5 1.9-112.3 4.9-120 58.1-5.2 118.5 41.6 123.2 45.3 33-8.9 70.7-13.6 112.9-13.6 42.4 0 80.2 4.9 113.5 13.9 11.3-8.6 67.3-48.8 121.3-43.9 2.9 7.7 24.7 58.3 5.5 118 32.4 36.8 48.9 82.7 48.9 132.3 0 102.2-59 188.1-200 212.9a127.5 127.5 0 0 1 38.1 91v112.5c.8 9 0 17.9 15 17.9 177.1-59.7 304.6-227 304.6-424.1 0-247.2-200.4-447.3-447.5-447.3z'
            ></path></svg
          >
          GitHub
        </a>
      </div>
    </header>
    <main class='flex justify-center'>
      <div class='w-[90vw] sm:w-[620px]'>
        <Content />
      </div>
    </main>
    <footer
      class='mt-24 flex justify-center border-t border-t-neutral-200 bg-neutral-100/75 py-8 dark:border-t-neutral-900 dark:bg-neutral-900/25'
    >
      <div class='flex w-[95vw] items-center justify-between sm:w-[50vw]'>
        <div class='flex items-center gap-x-1.5'>
          <img
            src='/headshot.webp'
            width='24'
            height='24'
            alt='My face'
            class='rounded-full'
          />
          <span class='text-sm'
            >Built by <a
              href='https://harshsingh.me'
              class='font-medium hover:underline'>Harsh Singh</a
            ></span
          >
        </div>
        <div>
          <select
            name='theme'
            id='theme'
            class='rounded-md border border-neutral-300/50 bg-neutral-200/50 px-2 py-1.5 text-sm dark:border-neutral-800 dark:bg-neutral-900'
          >
            <option value='system'>System</option>
            <option value='dark'>Dark</option>
            <option value='light'>Light</option>
          </select>
        </div>
      </div>
    </footer>
  </body>
  <script>
    import { initCursor } from 'pointers-js'
    initCursor({ pointer: ['a', 'button:not(.loading,.move)'] })

    const selectElement = document.getElementById('theme')

    function setTheme(theme: string) {
      const root = document.documentElement

      if (theme === 'dark') {
        root.classList.add('dark')
        localStorage.setItem('theme', 'dark')
      } else if (theme === 'light') {
        root.classList.remove('dark')
        localStorage.setItem('theme', 'light')
      } else {
        localStorage.removeItem('theme')

        if (window.matchMedia('(prefers-color-scheme: dark)').matches)
          root.classList.add('dark')
        else root.classList.remove('dark')
      }
    }

    selectElement!.addEventListener('change', (event) => {
      const target = event.target as HTMLSelectElement
      setTheme(target.value)
    })

    document.addEventListener('DOMContentLoaded', () => {
      const savedTheme = localStorage.getItem('theme')

      if (savedTheme) {
        ;(selectElement! as HTMLSelectElement).value = savedTheme
        setTheme(savedTheme)
      } else setTheme('system')
    })

    let copyButtonDefaultSVG = `
      <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M4.66634 10.4586H3.49967C2.85509 10.4586 2.33301 9.92658 2.33301 9.27092V2.93767C2.33301 2.28083 2.85509 1.75 3.49967 1.75H8.16634C8.81092 1.75 9.33301 2.28142 9.33301 2.93767V4.02617M5.83301 4.12533H10.4997C11.1443 4.12533 11.6663 4.65617 11.6663 5.31242V11.6457C11.6663 12.3025 11.1443 12.8333 10.4997 12.8333H5.83301C5.18842 12.8333 4.66634 12.3019 4.66634 11.6457V5.31242C4.66634 4.65675 5.18842 4.12533 5.83301 4.12533Z" 
          stroke="currentColor" stroke-width="0.875" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>
    `

    let copyButtonCopiedSVG = `
      <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">
        <path d="M2 7.33333L5.33333 10.6667L12 4" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round"/>
      </svg>
    `

    let codeBlocks = Array.from(document.querySelectorAll('pre'))

    for (let codeBlock of codeBlocks) {
      let wrapper = document.createElement('div')
      wrapper.style.position = 'relative'

      let copyButton = document.createElement('button')
      copyButton.className = 'copy-code'
      copyButton.innerHTML = copyButtonDefaultSVG

      codeBlock.setAttribute('tabindex', '0')
      codeBlock.appendChild(copyButton)
      codeBlock.parentNode!.insertBefore(wrapper, codeBlock)
      wrapper.appendChild(codeBlock)

      copyButton.addEventListener('click', async () => {
        await copyCode(codeBlock, copyButton)
      })
    }

    async function copyCode(block: HTMLPreElement, button: HTMLButtonElement) {
      let code = block.querySelector('code')
      let text = code!.innerText

      await navigator.clipboard.writeText(text)

      button.innerHTML = copyButtonCopiedSVG

      setTimeout(() => {
        button.innerHTML = copyButtonDefaultSVG
      }, 700)
    }
  </script>
</html>
